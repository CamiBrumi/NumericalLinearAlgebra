% polimquad2.m%function [coeff,norm2_res]=polminquad2(x,y,m)format long ;%hem de comprovar 0 ≤ m ≤ nx = [2; 5; 100; 34; -134];y = [564; -43; 0; 544; -2];m = 1;n = size(x);if ( 0 > m || m > n)  disp('no es compleix 0 ≤ m ≤ n')  return  endif;  for i = 1:m+1;  A(:,i)=x.^(m+1-i);endfor;disp(A)n = rows(A);m = columns(A);Q=zeros(n,m);R=zeros(m,m);disp('q i r amb zerooos')QR%ara farem la qr(A)for i = 1:m  R(i,i)=norm(A(:,i),2);  Q(:,i)=A(:,i)/R(i,i); %NORMALITZEM LA COLUMNA i-essima  for j = i+1:m %bucle per ortogonalitzar la resta de columnes de A respecte Q(:,i)    R(i,j)=dot(Q(:,i),A(:,j)); %producte escalar de la fila j-essima de A amb la columna nova de Q    A(:,j)=A(:,j)-R(i,j)*Q(:,i); %nova columna de A  endfor;endfor;%DIGAM QUE HI HA UN PROBLEMA EN EL ALGORISME DE LA QR QUE FA CANVIAR TOT DE SIGNE -------Q = -QR = -R%ARREGLAT PARCIALMENT--------------------------------------------------------------------%disp('qr de verdad')%[Q,R] = qr(A)%ara farem la substitucio enrera per resoldre el sistema R*coeff = Q'*y (equivalent a resoldre A'A*coeff = A'y )b = (Q')*y;%coeff = zeros(m,1);disp("La norma sub-infinit ||Q'Q - Id || es:")N = Q'*Q - eye(m);disp(norm( N, Inf))disp('mida y')disp(size(y))disp('mida q')mndisp('mida r')m#{for k = 1:m  i = (m - k)+1;  acum = 0;  for j = k:m  acum = acum + R(i,j)*coeff(j);  endfor;  coeff(i) = (b(i) - acum )/R(i,i);endfor;#}%coef =(Q'*y)/R;#{norm2_res = norm( AA*coeff - y, 2)for i = 1:n  plot(x(i),y(i)); hold onendfor;coeff = flip(coeff); %posar els coeficients en ordred = [min(x)-10:0.1:max(x)+10]; f = polyval(coeff,d);plot(d, f); hold offendfunction;#}